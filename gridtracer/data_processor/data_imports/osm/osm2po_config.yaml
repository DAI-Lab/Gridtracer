# Configuration for the Python osm2po-like parser

# --- Way Tag Resolver Settings (mimics wtr.* in osm2po.config) ---
way_tag_resolver:
  # List of flags used (corresponds to wtr.flagList)
  # These are used to generate bitmasks or check permissions.
  flag_list:
    - car
    - bike
    - foot
    - rail
    - ferry
    - poly # Flag to identify polygons if processed together

  # Final mask: Only include ways matching these flags (comma-separated string or list)
  # Corresponds to wtr.finalMask. Example: "car" or ["car", "bike"]
  # Removed because the corresponding line in osm2po.config was commented out, meaning all flags are allowed.
  # final_mask: "car" 

  # Polygon mask: Flag(s) identifying ways that are polygons and should be excluded from routing graph
  # Corresponds to wtr.polyMask
  poly_mask: "poly"

  # Main tag definitions (corresponds to .default.wtr.tag.highway.*)
  # Structure: highway_type: {priority, clazz, maxspeed, flags: [list_of_flags]}
  tags:
    motorway:       { priority: 1, clazz: 11, maxspeed: 120, flags: ["car"] }
    motorway_link:  { priority: 1, clazz: 12, maxspeed: 30,  flags: ["car"] }
    trunk:          { priority: 1, clazz: 13, maxspeed: 90,  flags: ["car"] }
    trunk_link:     { priority: 1, clazz: 14, maxspeed: 30,  flags: ["car"] }
    primary:        { priority: 1, clazz: 15, maxspeed: 70,  flags: ["car"] }
    primary_link:   { priority: 1, clazz: 16, maxspeed: 30,  flags: ["car"] }
    secondary:      { priority: 1, clazz: 21, maxspeed: 60,  flags: ["car"] }
    secondary_link: { priority: 1, clazz: 22, maxspeed: 30,  flags: ["car"] }
    tertiary:       { priority: 1, clazz: 31, maxspeed: 40,  flags: ["car", "bike"] }
    tertiary_link:  { priority: 1, clazz: 32, maxspeed: 20,  flags: ["car", "bike"] }
    residential:    { priority: 1, clazz: 41, maxspeed: 40,  flags: ["car", "bike"] }
    # 'road' is often ambiguous, maps to 'unclassified' or similar depending on region/use. Included for completeness.
    road:           { priority: 1, clazz: 42, maxspeed: 50,  flags: ["car", "bike"] }
    unclassified:   { priority: 1, clazz: 43, maxspeed: 50,  flags: ["car", "bike"] }
    service:        { priority: 1, clazz: 51, maxspeed: 15,  flags: ["car", "bike"] } # Adjusted speed slightly
    living_street:  { priority: 1, clazz: 63, maxspeed: 7,   flags: ["car", "bike", "foot"] }
    pedestrian:     { priority: 1, clazz: 62, maxspeed: 5,   flags: ["bike", "foot"] }
    track:          { priority: 1, clazz: 71, maxspeed: 10,  flags: ["bike", "foot"] } # Consider tracktype tag too
    path:           { priority: 1, clazz: 72, maxspeed: 10,  flags: ["bike", "foot"] }
    cycleway:       { priority: 1, clazz: 81, maxspeed: 15,  flags: ["bike"] }
    footway:        { priority: 2, clazz: 91, maxspeed: 5,   flags: ["foot"] }
    steps:          { priority: 2, clazz: 92, maxspeed: 5,   flags: ["foot"] }
    # Add other relevant types like ferry, railway if needed
    # route.ferry:      { priority: 2, clazz: 1, maxspeed: 10, flags: ["ferry"] } # Needs special handling
    # railway.rail:     { priority: 3, clazz: 3, maxspeed: 50, flags: ["rail"] } # Needs special handling

  

# --- Tile size setting ---
# 'x' disables tiling, specific dimensions like '10x10,1' can be used.
tileSize: "x"
